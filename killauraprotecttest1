{$asm}
aobscanmodule(25blockaura,libSandboxEngine.dll,74 ?? F3 ?? ?? ?? ?? 8D ?? ?? 50 51 8B ?? C6 ?? ?? ?? F3 ?? ?? ?? ?? E8 ?? ?? ?? ?? 80 ?? ?? ?? 0F 85 ?? ?? ?? ?? 8B ?? 8B ?? 8B ?? ?? FF ?? 84 ?? 0F 84 ?? ?? ?? ??) // should be unique
alloc(newmem,$1000)

label(code)
label(return)
newmem:
pushad
mov ecx,[libSandboxEngine.g_pPlayerCtrl]
mov ecx,[ecx+000004D0]
cmp ecx,00
popad
je code
pushad
mov ecx,[libSandboxEngine.g_pPlayerCtrl]
mov edx,[ecx+00000270]
mov edi,[edx+000000DC]
mov ebx,[edx+000000E0]
mov ebp,[edx+000000E4]
mov edx,ecx
sub esp,0C
push 00
push [libSandboxEngine.g_pPlayerCtrl]
mov ecx,[libMiniBaseGame.dll+B36C]
mov ecx,[ecx+78]
mov ecx,[ecx+08]
mov esi,[edx+00000524]
mov [esp+08],esi
mov esi,[edx+00000528]
mov [esp+0C],esi
sub dword ptr [esp+0C],64
mov esi,[edx+0000052C]
mov [esp+10],esi
mov eax,libiworld.dll+1BB6F0
call eax
push 00
push 00
mov ecx,[libSandboxEngine.g_pPlayerCtrl]
push [ecx+000004D0]
mov eax,libSandboxEngine.MpPlayerControl::interactActor
call eax
push 00
mov ecx,[libSandboxEngine.g_pPlayerCtrl]
mov ecx,[ecx+000009C4]
mov eax,libSandboxEngine.PlayerAnimation::performDig
call eax
sub esp,0C
push 00
push [libSandboxEngine.g_pPlayerCtrl]
mov ecx,[libMiniBaseGame.dll+B36C]
mov ecx,[ecx+78]
mov ecx,[ecx+08]
mov [esp+08],edi
mov [esp+0C],ebx
mov [esp+10],ebp
mov eax,libiworld.dll+1BB6F0
call eax
popad
code:
  movss xmm0,[ebp+08]
  jmp return

25blockaura+02:
  jmp newmem
return:
registersymbol(25blockaura)
